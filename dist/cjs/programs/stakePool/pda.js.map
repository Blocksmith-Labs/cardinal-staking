{"version":3,"file":"pda.js","sourceRoot":"","sources":["../../../../src/programs/stakePool/pda.ts"],"names":[],"mappings":";;;;AAAA,kDAAkD;AAClD,8DAAwC;AAExC,wBAA0E;AAC1E,2CAIqB;AAErB;;;GAGG;AACI,MAAM,eAAe,GAAG,KAAK,EAClC,UAAc,EACqB,EAAE;IACrC,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CACtC;QACE,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAe,CAAC;QACxC,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;KACxC,EACD,qBAAkB,CACnB,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,eAAe,mBAU1B;AAEF;;;GAGG;AACI,MAAM,gBAAgB,GAAG,KAAK,EACnC,MAAsB,EACtB,WAA2B,EAC3B,cAA8B,EAC9B,UAAmB,EACgB,EAAE;IACrC,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CACtC;QACE,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAgB,CAAC;QACzC,WAAW,CAAC,QAAQ,EAAE;QACtB,cAAc,CAAC,QAAQ,EAAE;QACzB,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE;KACnE,EACD,qBAAkB,CACnB,CAAC;AACJ,CAAC,CAAC;AAfW,QAAA,gBAAgB,oBAe3B;AAEF;;;GAGG;AACI,MAAM,gBAAgB,GAAG,KAAK,IAAuC,EAAE;IAC5E,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CACtC,CAAC,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,2BAAe,CAAC,CAAC,EAC1C,qBAAkB,CACnB,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,gBAAgB,oBAK3B;AAEF;;;GAGG;AACI,MAAM,wBAAwB,GAAG,KAAK,EAC3C,WAA2B,EAC3B,MAAsB,EACa,EAAE;IACrC,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CACtC;QACE,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,oCAAwB,CAAC;QACjD,WAAW,CAAC,QAAQ,EAAE;QACtB,MAAM,CAAC,QAAQ,EAAE;KAClB,EACD,qBAAkB,CACnB,CAAC;AACJ,CAAC,CAAC;AAZW,QAAA,wBAAwB,4BAYnC;AAEF;;;GAGG;AACI,MAAM,kBAAkB,GAAG,KAAK,EACrC,WAA2B,EAC3B,UAAe,EACoB,EAAE;IACrC,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CACtC;QACE,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,8BAAkB,CAAC;QAC3C,WAAW,CAAC,QAAQ,EAAE;QACtB,CAAC,UAAU,aAAV,UAAU,cAAV,UAAU,GAAI,IAAI,WAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;KACvD,EACD,qBAAkB,CACnB,CAAC;AACJ,CAAC,CAAC;AAZW,QAAA,kBAAkB,sBAY7B","sourcesContent":["import { BN, utils } from \"@project-serum/anchor\";\nimport * as web3 from \"@solana/web3.js\";\n\nimport { STAKE_ENTRY_SEED, STAKE_POOL_ADDRESS, STAKE_POOL_SEED } from \".\";\nimport {\n  IDENTIFIER_SEED,\n  STAKE_AUTHORIZATION_SEED,\n  STAKE_BOOSTER_SEED,\n} from \"./constants\";\n\n/**\n * Finds the stake pool id.\n * @returns\n */\nexport const findStakePoolId = async (\n  identifier: BN\n): Promise<[web3.PublicKey, number]> => {\n  return web3.PublicKey.findProgramAddress(\n    [\n      utils.bytes.utf8.encode(STAKE_POOL_SEED),\n      identifier.toArrayLike(Buffer, \"le\", 8),\n    ],\n    STAKE_POOL_ADDRESS\n  );\n};\n\n/**\n * Convenience method to find the stake entry id.\n * @returns\n */\nexport const findStakeEntryId = async (\n  wallet: web3.PublicKey,\n  stakePoolId: web3.PublicKey,\n  originalMintId: web3.PublicKey,\n  isFungible: boolean\n): Promise<[web3.PublicKey, number]> => {\n  return web3.PublicKey.findProgramAddress(\n    [\n      utils.bytes.utf8.encode(STAKE_ENTRY_SEED),\n      stakePoolId.toBuffer(),\n      originalMintId.toBuffer(),\n      isFungible ? wallet.toBuffer() : web3.PublicKey.default.toBuffer(),\n    ],\n    STAKE_POOL_ADDRESS\n  );\n};\n\n/**\n * Finds the identifier id.\n * @returns\n */\nexport const findIdentifierId = async (): Promise<[web3.PublicKey, number]> => {\n  return web3.PublicKey.findProgramAddress(\n    [utils.bytes.utf8.encode(IDENTIFIER_SEED)],\n    STAKE_POOL_ADDRESS\n  );\n};\n\n/**\n * Find stake authorization id.\n * @returns\n */\nexport const findStakeAuthorizationId = async (\n  stakePoolId: web3.PublicKey,\n  mintId: web3.PublicKey\n): Promise<[web3.PublicKey, number]> => {\n  return web3.PublicKey.findProgramAddress(\n    [\n      utils.bytes.utf8.encode(STAKE_AUTHORIZATION_SEED),\n      stakePoolId.toBuffer(),\n      mintId.toBuffer(),\n    ],\n    STAKE_POOL_ADDRESS\n  );\n};\n\n/**\n * Find stake booster id.\n * @returns\n */\nexport const findStakeBoosterId = async (\n  stakePoolId: web3.PublicKey,\n  identifier?: BN\n): Promise<[web3.PublicKey, number]> => {\n  return web3.PublicKey.findProgramAddress(\n    [\n      utils.bytes.utf8.encode(STAKE_BOOSTER_SEED),\n      stakePoolId.toBuffer(),\n      (identifier ?? new BN(0)).toArrayLike(Buffer, \"le\", 8),\n    ],\n    STAKE_POOL_ADDRESS\n  );\n};\n"]}