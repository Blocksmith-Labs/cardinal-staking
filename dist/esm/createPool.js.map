{"version":3,"file":"createPool.js","sourceRoot":"","sources":["../../src/createPool.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AACjE,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,EAAE,uBAAuB,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AACjE,OAAO,EAAE,qBAAqB,EAAE,MAAM,8BAA8B,CAAC;AAErE,MAAM,CAAC,MAAM,WAAW,GAAG,2FAA2F,CAAC;AAEvH,MAAM,QAAQ,GAAG,IAAI,MAAM,CACzB,OAAO,CAAC,aAAa;AACnB,iEAAiE;AACjE,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CACpE,CACF,CAAC;AAEF,CAAC,KAAK,IAAI,EAAE;IACV,2EAA2E;IAC3E,MAAM,IAAI,GAAG,IAAI,UAAU,CACzB,uCAAuC;IACvC,0CAA0C;IAC1C,WAAW,CACZ,CAAC;IAEF,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC,GAAG,MAAM,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE;QACxE,sBAAsB;QACtB,gBAAgB,EAAE;YAChB,IAAI,SAAS,CAAC,8CAA8C,CAAC;SAC9D;KACF,CAAC,CAAC;IACH,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAEvE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAEvB,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;IAElB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;IAEjD,MAAM,CAAC,WAAW,EAAE,mBAAmB,CAAC,GAAG,MAAM,uBAAuB,CACtE,IAAI,EACJ,QAAQ,EACR;QACE,WAAW,EAAE,WAAW;QACxB,YAAY,EAAE,IAAI,SAAS,CACzB,8CAA8C,CAC/C;QACD,IAAI,EAAE,qBAAqB,CAAC,QAAQ;QACpC,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;QACxC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;KACzB,CACF,CAAC;IAEF,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAErE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,mBAAmB,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACxB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","sourcesContent":["import { BN, Wallet } from \"@project-serum/anchor\";\nimport { sleep } from \"@saberhq/token-utils\";\nimport { Connection, Keypair, PublicKey } from \"@solana/web3.js\";\nimport fs from \"fs\";\nimport { createRewardDistributor, createStakePool } from \"./api\";\nimport { RewardDistributorKind } from \"./programs/rewardDistributor\";\n\nexport const KEYS_FOLDER = `/Users/mertozgun/.config/solana/bifrost/BFAUyTr7vbPLCLRCfKf436MzU5r4fMoouyyWFvpqpDB5.json`;\n\nconst walletKp = new Wallet(\n  Keypair.fromSecretKey(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    new Uint8Array(JSON.parse(fs.readFileSync(KEYS_FOLDER).toString()))\n  )\n);\n\n(async () => {\n  // const conn = new Connection(\"http://191.101.160.247:8080\", \"confirmed\");\n  const conn = new Connection(\n    \"http://blocksmith-private.sentries.io\",\n    // \"https://metaplex.devnet.rpcpool.com/\",\n    \"confirmed\"\n  );\n\n  const [transaction1, stakePoolId] = await createStakePool(conn, walletKp, {\n    // resetOnStake: true,\n    requiresCreators: [\n      new PublicKey(\"8m2b8ar9BNZErJQgSBwY3eCe73yR4k9qHUxxGffxyw2d\"),\n    ],\n  });\n  const tx1 = await conn.sendTransaction(transaction1, [walletKp.payer]);\n\n  console.log(\"stakepool\", stakePoolId.toBase58());\n  console.log(\"tx\", tx1);\n\n  await sleep(2000);\n\n  console.log(\"reward amount\", (12 / 86400) * 1e9);\n\n  const [transaction, rewardDistributorId] = await createRewardDistributor(\n    conn,\n    walletKp,\n    {\n      stakePoolId: stakePoolId,\n      rewardMintId: new PublicKey(\n        \"FoRGERiW7odcCBGU1bztZi16osPBHjxharvDathL5eds\"\n      ),\n      kind: RewardDistributorKind.Treasury,\n      rewardAmount: new BN((12 / 86400) * 1e9),\n      supply: new BN(50 * 1e9),\n    }\n  );\n\n  const tx = await conn.sendTransaction(transaction, [walletKp.payer]);\n\n  console.log(\"rewarddist\", rewardDistributorId.toBase58());\n  console.log(\"tx\", tx);\n})().catch((err) => console.log(err));\n"]}