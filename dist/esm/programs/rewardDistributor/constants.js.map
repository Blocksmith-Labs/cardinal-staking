{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../src/programs/rewardDistributor/constants.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAG5D,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,KAAK,wBAAwB,MAAM,uCAAuC,CAAC;AAElF,MAAM,CAAC,MAAM,0BAA0B,GAAG,IAAI,SAAS,CACrD,8CAA8C,CAC/C,CAAC;AACF,MAAM,CAAC,MAAM,cAAc,GAAG,IAAI,SAAS,CACzC,6CAA6C,CAC9C,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,cAAc,CAAC;AAEhD,MAAM,CAAC,MAAM,uBAAuB,GAAG,oBAAoB,CAAC;AAK5D,MAAM,CAAC,MAAM,sBAAsB,GAAG,wBAAwB,CAAC,GAAG,CAAC;AAWnE,MAAM,CAAN,IAAY,qBAGX;AAHD,WAAY,qBAAqB;IAC/B,iEAAQ,CAAA;IACR,yEAAY,CAAA;AACd,CAAC,EAHW,qBAAqB,KAArB,qBAAqB,QAGhC;AAED,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,UAAsB,EACtB,MAAe,EACf,cAA+B,EAC/B,EAAE;IACF,OAAO,IAAI,OAAO,CAChB,sBAAsB,EACtB,0BAA0B,EAC1B,IAAI,cAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EACnD,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CACrB,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ParsedIdlAccountData } from \"@cardinal/common\";\r\nimport { emptyWallet } from \"@cardinal/common\";\r\nimport { AnchorProvider, Program } from \"@coral-xyz/anchor\";\r\nimport type { Wallet } from \"@coral-xyz/anchor/dist/cjs/provider\";\r\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\r\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\r\n\r\nimport * as REWARD_DISTRIBUTOR_TYPES from \"../../idl/cardinal_reward_distributor\";\r\n\r\nexport const REWARD_DISTRIBUTOR_ADDRESS = new PublicKey(\r\n  \"6566pw1vumw5aw7FKX2iFydBzAF1ubuzPcGxH4vUD5XN\"\r\n);\r\nexport const REWARD_MANAGER = new PublicKey(\r\n  \"crkdpVWjHWdggGgBuSyAqSmZUmAjYLzD435tcLDRLXr\"\r\n);\r\n\r\nexport const REWARD_ENTRY_SEED = \"reward-entry\";\r\n\r\nexport const REWARD_DISTRIBUTOR_SEED = \"reward-distributor\";\r\n\r\nexport type REWARD_DISTRIBUTOR_PROGRAM =\r\n  REWARD_DISTRIBUTOR_TYPES.CardinalRewardDistributor;\r\n\r\nexport const REWARD_DISTRIBUTOR_IDL = REWARD_DISTRIBUTOR_TYPES.IDL;\r\n\r\nexport type RewardEntryData = ParsedIdlAccountData<\r\n  \"rewardEntry\",\r\n  REWARD_DISTRIBUTOR_PROGRAM\r\n>;\r\nexport type RewardDistributorData = ParsedIdlAccountData<\r\n  \"rewardDistributor\",\r\n  REWARD_DISTRIBUTOR_PROGRAM\r\n>;\r\n\r\nexport enum RewardDistributorKind {\r\n  Mint = 1,\r\n  Treasury = 2,\r\n}\r\n\r\nexport const rewardDistributorProgram = (\r\n  connection: Connection,\r\n  wallet?: Wallet,\r\n  confirmOptions?: ConfirmOptions\r\n) => {\r\n  return new Program<REWARD_DISTRIBUTOR_PROGRAM>(\r\n    REWARD_DISTRIBUTOR_IDL,\r\n    REWARD_DISTRIBUTOR_ADDRESS,\r\n    new AnchorProvider(\r\n      connection,\r\n      wallet ?? emptyWallet(Keypair.generate().publicKey),\r\n      confirmOptions ?? {}\r\n    )\r\n  );\r\n};\r\n"]}