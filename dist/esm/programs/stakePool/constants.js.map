{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../src/programs/stakePool/constants.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAG5D,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,KAAK,gBAAgB,MAAM,+BAA+B,CAAC;AAElE,MAAM,CAAC,MAAM,kBAAkB,GAAG,IAAI,SAAS,CAC7C,8CAA8C,CAC/C,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,YAAY,CAAC;AAE5C,MAAM,CAAC,MAAM,gBAAgB,GAAG,aAAa,CAAC;AAE9C,MAAM,CAAC,MAAM,gBAAgB,GAAG,aAAa,CAAC;AAE9C,MAAM,CAAC,MAAM,eAAe,GAAG,YAAY,CAAC;AAE5C,MAAM,CAAC,MAAM,wBAAwB,GAAG,qBAAqB,CAAC;AAE9D,MAAM,CAAC,MAAM,kBAAkB,GAAG,eAAe,CAAC;AAElD,MAAM,CAAC,MAAM,gBAAgB,GAAG,EAAE,CAAC;AACnC,MAAM,CAAC,MAAM,aAAa,GAAG,EAAE,CAAC;AAChC,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAC9C,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,CAAC;AAI7B,MAAM,CAAC,MAAM,cAAc,GAAG,gBAAgB,CAAC,GAAG,CAAC;AA2BnD,MAAM,CAAC,MAAM,kCAAkC,GAAG,wBAAwB,CAAC;AAC3E,MAAM,CAAC,MAAM,6BAA6B,GAAG,IAAI,SAAS,CACxD,8CAA8C,CAAC,yBAAyB;CACzE,CAAC;AAEF,MAAM,CAAN,IAAY,WAOX;AAPD,WAAY,WAAW;IACrB,uDAAuD;IACvD,qDAAY,CAAA;IACZ,oDAAoD;IACpD,mDAAW,CAAA;IACX,kBAAkB;IAClB,6CAAQ,CAAA;AACV,CAAC,EAPW,WAAW,KAAX,WAAW,QAOtB;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,UAAsB,EACtB,MAAe,EACf,cAA+B,EAC/B,EAAE;IACF,OAAO,IAAI,OAAO,CAChB,cAAc,EACd,kBAAkB,EAClB,IAAI,cAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EACnD,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CACrB,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ParsedIdlAccountData } from \"@cardinal/common\";\r\nimport { emptyWallet } from \"@cardinal/common\";\r\nimport { AnchorProvider, Program } from \"@coral-xyz/anchor\";\r\nimport type { Wallet } from \"@coral-xyz/anchor/dist/cjs/provider\";\r\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\r\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\r\n\r\nimport * as STAKE_POOL_TYPES from \"../../idl/cardinal_stake_pool\";\r\n\r\nexport const STAKE_POOL_ADDRESS = new PublicKey(\r\n  \"GKh7n1S96Kj3jadaqtALZu8i3oMnKkLHDXXKU6fweWX2\"\r\n);\r\n\r\nexport const STAKE_POOL_SEED = \"stake-pool\";\r\n\r\nexport const STAKE_ENTRY_SEED = \"stake-entry\";\r\n\r\nexport const GROUP_ENTRY_SEED = \"group-entry\";\r\n\r\nexport const IDENTIFIER_SEED = \"identifier\";\r\n\r\nexport const STAKE_AUTHORIZATION_SEED = \"stake-authorization\";\r\n\r\nexport const STAKE_BOOSTER_SEED = \"stake-booster\";\r\n\r\nexport const AUTHORITY_OFFSET = 25;\r\nexport const STAKER_OFFSET = 82;\r\nexport const GROUP_STAKER_OFFSET = 8 + 1 + 32;\r\nexport const POOL_OFFSET = 9;\r\n\r\nexport type STAKE_POOL_PROGRAM = STAKE_POOL_TYPES.CardinalStakePool;\r\n\r\nexport const STAKE_POOL_IDL = STAKE_POOL_TYPES.IDL;\r\n\r\nexport type StakePoolData = ParsedIdlAccountData<\r\n  \"stakePool\",\r\n  STAKE_POOL_PROGRAM\r\n>;\r\nexport type StakeEntryData = ParsedIdlAccountData<\r\n  \"stakeEntry\",\r\n  STAKE_POOL_PROGRAM\r\n>;\r\nexport type GroupStakeEntryData = ParsedIdlAccountData<\r\n  \"groupStakeEntry\",\r\n  STAKE_POOL_PROGRAM\r\n>;\r\nexport type IdentifierData = ParsedIdlAccountData<\r\n  \"identifier\",\r\n  STAKE_POOL_PROGRAM\r\n>;\r\nexport type StakeAuthorizationData = ParsedIdlAccountData<\r\n  \"stakeAuthorizationRecord\",\r\n  STAKE_POOL_PROGRAM\r\n>;\r\nexport type StakeBoosterData = ParsedIdlAccountData<\r\n  \"stakeBooster\",\r\n  STAKE_POOL_PROGRAM\r\n>;\r\n\r\nexport const STAKE_BOOSTER_PAYMENT_MANAGER_NAME = \"cardinal-stake-booster\";\r\nexport const STAKE_BOOSTER_PAYMENT_MANAGER = new PublicKey(\r\n  \"CuEDMUqgkGTVcAaqEDHuVR848XN38MPsD11JrkxcGD6a\" // cardinal-stake-booster\r\n);\r\n\r\nexport enum ReceiptType {\r\n  // Receive the original mint wrapped in a token manager\r\n  Original = 1,\r\n  // Receive a receipt mint wrapped in a token manager\r\n  Receipt = 2,\r\n  // Receive nothing\r\n  None = 3,\r\n}\r\n\r\nexport const stakePoolProgram = (\r\n  connection: Connection,\r\n  wallet?: Wallet,\r\n  confirmOptions?: ConfirmOptions\r\n) => {\r\n  return new Program<STAKE_POOL_PROGRAM>(\r\n    STAKE_POOL_IDL,\r\n    STAKE_POOL_ADDRESS,\r\n    new AnchorProvider(\r\n      connection,\r\n      wallet ?? emptyWallet(Keypair.generate().publicKey),\r\n      confirmOptions ?? {}\r\n    )\r\n  );\r\n};\r\n"]}